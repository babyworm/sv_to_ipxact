<?xml version="1.0" encoding="UTF-8"?>
<!--
//================================================================================
//   The confidential and proprietary information contained in this file may
//   only be used by a person authorised under and to the extent permitted
//   by a subsisting licensing agreement from Arm Limited or its affiliates.
//
//          (C) COPYRIGHT 2025 Arm Limited or its affiliates.
//              ALL RIGHTS RESERVED
//
//   This entire notice must be reproduced on all copies of this file
//   and copies of this file may only be made by a person if such person is
//   permitted to do so under the terms of a subsisting license agreement
//   from Arm Limited or its affiliates.
//================================================================================
-->
<spirit:abstractionDefinition xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:arm="http://www.arm.com/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009/index.xsd">
    <spirit:vendor>amba.com</spirit:vendor>
    <spirit:library>AMBA5</spirit:library>
    <spirit:name>CHI-H-SNI_rtl</spirit:name>
    <spirit:version>r0p0_0</spirit:version>
    <spirit:busType spirit:vendor="amba.com" spirit:library="AMBA5" spirit:name="CHI-H-SNI" spirit:version="r0p0_0"/>
    <spirit:ports>
        <spirit:port>
            <spirit:logicalName>CLK</spirit:logicalName>
            <spirit:description>Synchronous clock for this interface</spirit:description>
            <spirit:wire>
                <spirit:qualifier>
                    <spirit:isClock>true</spirit:isClock>
                </spirit:qualifier>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:requiresDriver spirit:driverType="clock">true</spirit:requiresDriver>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>CLKEN</spirit:logicalName>
            <spirit:description>Clock enable signal. Used as a qualifier for the CLK signal. This signal indicates which rising edges of CLK should be acted upon: 1 = valid rising edge of ACLK, 0 = any rising edge of ACLK should be ignored and no bus-state altered.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>1</spirit:defaultValue>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:isClockEnable>true</arm:isClockEnable>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>CLKENCHK</spirit:logicalName>
            <spirit:description>Check signal for CLKEN</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>CLKEN</arm:checkPortReference>
                </arm:checkPortReferences>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RESETn</spirit:logicalName>
            <spirit:description>Asynchronous assert, synchronous deasserted reset signal</spirit:description>
            <spirit:wire>
                <spirit:qualifier>
                    <spirit:isReset>true</spirit:isReset>
                </spirit:qualifier>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:requiresDriver spirit:driverType="singleShot">true</spirit:requiresDriver>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXLINKACTIVEREQ</spirit:logicalName>
            <spirit:description>TX Link Activation Request Signal.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXLINKACTIVEACK</spirit:logicalName>
            <spirit:description>TX Link Activation Acknowledgement Signal.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXLINKACTIVEREQ</spirit:logicalName>
            <spirit:description>RX Link Activation Request Signal.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXLINKACTIVEACK</spirit:logicalName>
            <spirit:description>RX Link Activation Acknowledgement Signal.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXSACTIVE</spirit:logicalName>
            <spirit:description>Protocol activity indicator. TXSACTIVE signal indicates that the protocol layer of the SNI is active - i.e., there are active transactions either initiated by the node or by the interconnect.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXSACTIVE</spirit:logicalName>
            <spirit:description>Protocol activity indicator. RXSACTIVE signal indicates that the protocol layer of the interconnect is active - i.e., there are active transactions either initiated by the node or by the interconnect.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXLINKACTIVEREQCHK</spirit:logicalName>
            <spirit:description>Check signal for TXLINKACTIVEREQ.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXLINKACTIVEREQ</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXLINKACTIVEACKCHK</spirit:logicalName>
            <spirit:description>Check signal for TXLINKACTIVEACK.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXLINKACTIVEACK</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXLINKACTIVEREQCHK</spirit:logicalName>
            <spirit:description>Check signal for RXLINKACTIVEREQ.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXLINKACTIVEREQ</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXLINKACTIVEACKCHK</spirit:logicalName>
            <spirit:description>Check signal for RXLINKACTIVEACK.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXLINKACTIVEACK</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXSACTIVECHK</spirit:logicalName>
            <spirit:description>Check signal for TXSACTIVE.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXSACTIVE</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXSACTIVECHK</spirit:logicalName>
            <spirit:description>Check signal for RXSACTIVE.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXSACTIVE</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLITPEND</spirit:logicalName>
            <spirit:description>FLITPEND signal for TXRSP VC. FLITPEND is an early indication that a flit may be transmitted in the following cycle. It is intended to be used for low-level clock and/or power optimizations.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLITV</spirit:logicalName>
            <spirit:description>Flit valid signal for TXRSP VC. FLITV is the indication of a valid flit transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.QoS</spirit:logicalName>
            <spirit:description>Quality of Service priority level. Ascending values of QoS indicate higher priority levels.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.TgtID</spirit:logicalName>
            <spirit:description>Target Identifier associated with the message. The unique physical node ID of the component to which the
message is targeted. This is used by the interconnect to determine the port to which the message is routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.SrcID</spirit:logicalName>
            <spirit:description>Source Identifier associated with the message. The unique physical node ID of the component from which the
message is sent. This is used by the interconnect to determine the port from which the message has been routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.TxnID</spirit:logicalName>
            <spirit:description>Transaction Identifier associated with the message. Every new transaction from a given source node, except a link
flit, has a unique 12-bit transaction ID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.Opcode</spirit:logicalName>
            <spirit:description>Specifies the operation to be carried out. The Opcode encodings are specific to each channel.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>5</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>5</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.RespErr</spirit:logicalName>
            <spirit:description>This field indicates the error status of the response. [0b00 - Normal Okay. Indicates that either: The Normal access was successful. The Exclusive access failed, 0b01 - Exclusive Okay. Indicates that either the read or write portion of an exclusive access was successful. 0b10 - Data Error. 0b11 - Non-data Error.]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.Resp</spirit:logicalName>
            <spirit:description>Response Status. The Resp field must have the same value in all data flits of a multi-flit data transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.FwdState</spirit:logicalName>
            <spirit:description>Applicable in SnpRespFwded response only.
FwdState[2]	PassDirty. Indicates that the data included in the response message sent to Requester is Dirty with respect to memory and that the responsibility of writing back the cache line is being passed to the Requester.
1'b0 : Forwarded data is not Dirty.
1'b1 : Forwarded data is Dirty and the responsibility of writing back the cache line is being passed on.
FwdState[1:0]	Indicates the final state in the Requester.
Note: This field slot is also used in transaction flows to define DataPull.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.CBusy</spirit:logicalName>
            <spirit:description>Completer Busy Indication. This 3-bit field is a mechanism for the Completer of a transaction to indicate its current level of activity. The encoding of field is implementation defined.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.DBID</spirit:logicalName>
            <spirit:description>Data Buffer Identifier. The DBID is associated with a Write transaction. In response to Write requests, the DBID is sent to the requester.
Note, this field is also used in other transaction flows to define PGroupID, StashGroupID and TagGroupID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.PCrdType</spirit:logicalName>
            <spirit:description>Protocol Credit Type. Indicates the type of credit being granted or returned.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.TagOp</spirit:logicalName>
            <spirit:description>Tags Operation. For a Comp response, this signal is only used in response to a MakeReadUnique transaction and is used to indicate if responsibility for dirty tags is being passed to the Requester. For all other RSP channel messages, it is inapplicable and must be zero.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.TraceTag</spirit:logicalName>
            <spirit:description>TraceTag, a one bit field.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLIT.CacheLineID</spirit:logicalName>
            <spirit:description>CacheLineID indicates which cache line a Response or Data message relates to.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPLCRDV</spirit:logicalName>
            <spirit:description>Link layer credit signal for TXRSP VC. A TXRSP flit may only be sent if a corresponding L-credit is available at the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLITPENDCHK</spirit:logicalName>
            <spirit:description>Check signal for TXRSPFLITPEND.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXRSPFLITPEND</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLITVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXRSPFLITV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXRSPFLITV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPFLITCHK</spirit:logicalName>
            <spirit:description>Check signal for TXRSPFLIT.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXRSPFLIT</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXRSPLCRDVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXRSPLCRDV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXRSPLCRDV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLITPEND</spirit:logicalName>
            <spirit:description>FLITPEND signal for TXDAT VC. FLITPEND is an early indication that a flit may be transmitted in the following cycle. It is intended to be used for low-level clock and/or power optimizations.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLITV</spirit:logicalName>
            <spirit:description>Flit valid signal for TXDAT VC. FLITV is the indication of a valid flit transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.QoS</spirit:logicalName>
            <spirit:description>Quality of Service priority level. Ascending values of QoS indicate higher priority levels.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.TgtID</spirit:logicalName>
            <spirit:description>Target Identifier associated with the message. The unique physical node ID of the component to which the
message is targeted. This is used by the interconnect to determine the port to which the message is routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.SrcID</spirit:logicalName>
            <spirit:description>Source Identifier associated with the message. The unique physical node ID of the component from which the
message is sent. This is used by the interconnect to determine the port from which the message has been routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.TxnID</spirit:logicalName>
            <spirit:description>Transaction Identifier associated with the message. Every new transaction from a given source node, except a link
flit, has a unique 12-bit transaction ID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.HomeNID</spirit:logicalName>
            <spirit:description>Home Node identifier.The Requester uses the value in this field to determine the TgtID of the CompAck to be sent in response to CompData.
        Note: This field slot can also be used to hold the MismatchedMECID and PBHA fields in bits [4:0] with remaining bits as 0.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Opcode</spirit:logicalName>
            <spirit:description>Specifies the operation to be carried out. The Opcode encodings are specific to each channel.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.RespErr</spirit:logicalName>
            <spirit:description>This field indicates the error status of the response. [0b00 - Normal Okay. Indicates that either: The Normal access was successful. The Exclusive access failed, 0b01 - Exclusive Okay. Indicates that either the read or write portion of an exclusive access was successful. 0b10 - Data Error. 0b11 - Non-data Error.]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Resp</spirit:logicalName>
            <spirit:description>Response Status. The Resp field must have the same value in all data flits of a multi-flit data transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.DataSource</spirit:logicalName>
            <spirit:description>Identifies the Sender of the data response.
            Note :  This field can also be used to hold FwdState[2:0], with bits [7:3] = '00000'.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.DataPull</spirit:logicalName>
            <spirit:description>This field indicates the inclusion of a Read request, also referred to as a Data Pull, in the Snoop response to a Stash snoop</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.CBusy</spirit:logicalName>
            <spirit:description>Completer Busy Indication. This 3-bit field is a mechanism for the Completer of a transaction to indicate its current level of activity. The encoding of field is implementation defined.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.MECID</spirit:logicalName>
            <spirit:description>Memory Encryption Contexts ID. The MECID is used by a memory encryption engine as an index into a table of encryption contexts, that contribute to the external memory encryption.
     Note :  This field can also be used to hold DBID[11:0], with bits [15:12] = '0000'.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.CCID</spirit:logicalName>
            <spirit:description>Critical Chunk Identifier. The CCID indicates the critical 128-bit chunk of the data that is being requested. [0b00 - Data[127:0], 0b01 - Data[255:128], 0b10 - Data[383:256], 0b11 - Data[511:384]]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.DataID</spirit:logicalName>
            <spirit:description>Data Identifier. The DataID indicates the relative position of the data chunk within the 512-bit cache line that is being transferred.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.CacheLineID</spirit:logicalName>
            <spirit:description>CacheLineID indicates which cache line a Response or Data message relates to.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.TagOp</spirit:logicalName>
            <spirit:description>Tags Operation. Indicates the operation to be performed on the tags present.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Tag</spirit:logicalName>
            <spirit:description>Provides a set of 4-bit Tags, per an aligned 16 bytes of data.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.TU</spirit:logicalName>
            <spirit:description>Indicates which of the Allocation Tags must be updated.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.TraceTag</spirit:logicalName>
            <spirit:description>TraceTag, a one bit field.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.CAH</spirit:logicalName>
            <spirit:description>CopyAtHome attribute. In data responses from Home or a Snoopee, indicates if the Home keeps a copy of the line that is provided to the Requester</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.NumDat</spirit:logicalName>
            <spirit:description>NumDat indicates the number of additional DAT packets represented by this transferred packet.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Replicate</spirit:logicalName>
            <spirit:description>Replicate is used in combination with NumDat to establish the field values for any elided packets.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.RSVDC</spirit:logicalName>
            <spirit:description>Reserved for customer use. Any value is valid in a Protocol flit. Propagation of this field through the interconnect is IMPLEMENTATION DEFINED.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.BE</spirit:logicalName>
            <spirit:description>Byte Enable. The BE field is defined for write data, DVM payload, and snoop response data transfers. For read response data transfers, this field can have any value. It consists of a bit for each data byte in the DAT flit.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Data</spirit:logicalName>
            <spirit:description>Data payload. The following data bus widths are supported: 128-bit, 256-bit, 512-bit.</spirit:description>
            <spirit:wire>
                <spirit:qualifier>
                    <spirit:isData>true</spirit:isData>
                </spirit:qualifier>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.DataCheck</spirit:logicalName>
            <spirit:description>Optional field of width 0 or Data width/8.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLIT.Poison</spirit:logicalName>
            <spirit:description>This field indicates if the 64-bit chunk of data corresponding to a Poison bit is poisoned, that is, has an error, and must not be consumed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATLCRDV</spirit:logicalName>
            <spirit:description>Link layer credit signal for TXDAT VC. A TXDAT flit may only be sent if a corresponding L-credit is available at the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLITPENDCHK</spirit:logicalName>
            <spirit:description>Check signal for TXDATFLITPEND.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXDATFLITPEND</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLITVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXDATFLITV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXDATFLITV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATFLITCHK</spirit:logicalName>
            <spirit:description>Check signal for TXDATFLIT.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXDATFLIT</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>TXDATLCRDVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXDATLCRDV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>TXDATLCRDV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITPEND</spirit:logicalName>
            <spirit:description>FLITPEND signal for RXREQ VC. FLITPEND is an early indication that a flit may be transmitted in the following cycle. It is intended to be used for low-level clock and/or power optimizations.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITV</spirit:logicalName>
            <spirit:description>Flit valid signal for RXREQ VC. FLITV is the indication of a valid flit transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.QoS</spirit:logicalName>
            <spirit:description>Quality of Service priority level. Ascending values of QoS indicate higher priority levels.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.TgtID</spirit:logicalName>
            <spirit:description>Target Identifier associated with the message. The unique physical node ID of the component to which the
message is targeted. This is used by the interconnect to determine the port to which the message is routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.SrcID</spirit:logicalName>
            <spirit:description>Source Identifier associated with the message. The unique physical node ID of the component from which the
message is sent. This is used by the interconnect to determine the port from which the message has been routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.TxnID</spirit:logicalName>
            <spirit:description>Transaction Identifier associated with the message. Every new transaction from a given source node, except a link
flit, has a unique 12-bit transaction ID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.ReturnNID</spirit:logicalName>
            <spirit:description>Identifies the node SN-F needs to send CompData response to. It can be either the NID of the Home or NID of the Transaction Requester.
Note: This slot can also be used to transport StashNID and DataTarget[6:0] fields.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.StashNIDValid</spirit:logicalName>
            <spirit:description>This field is applicable in Stash requests only and is defined as below:
1'b1:  The StashNID field in the Request has a valid Stash target.
1'b0:  StashNID field value is a do not care and must be set to zero.
The field is inapplicable in all other requests.
Note: This field slot can also be used to transport Endian, Deep and PrefetchTgtHint fields.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.ReturnTxnID</spirit:logicalName>
            <spirit:description>ReturnTxnID is only applicable in a ReadNoSnp, ReadNoSnpSep, WriteNoSnp, Combined Write, and Atomic requests from Home to Subordinate. Identifies the value SN-F must use in TxnID field of the CompData response. It can be either the TxnID generated by Home for this transaction or the TxnID in Request packet from the Transaction requester.
The field is inapplicable in all other requests. ReturnTxnID when inapplicable must be set to zero.
Note: This slot can also transport StashLPIDValid and StashLPID[4:0] fields.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.Opcode</spirit:logicalName>
            <spirit:description>Specifies the operation to be carried out. The Opcode encodings are specific to each channel.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>7</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>7</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.MultiReq</spirit:logicalName>
            <spirit:description>MultiReq is used in combination with with the NumReq field to indicate the total amount of Data transfer that is being requested.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.NumReq</spirit:logicalName>
            <spirit:description>NumReq is used in combination with with the MultiReq field to indicate the total amount of Data transfer that is being requested.
    Note :  This field can also be used to hold Size[2:0], with bits [5:3] = '000'.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.Addr</spirit:logicalName>
            <spirit:description>Specifies the address associated with the message:
- Request messages support a 44-52 bit address field.</spirit:description>
            <spirit:wire>
                <spirit:qualifier>
                    <spirit:isAddress>true</spirit:isAddress>
                </spirit:qualifier>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.PAS</spirit:logicalName>
            <spirit:description>Physical Address Space (PAS). Identifies the PAS of a transaction.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.LikelyShared</spirit:logicalName>
            <spirit:description>Likely Shared. Indicates whether the requested data is likely to be shared with another RN. [0 - Not likely to be shared by another RN,
1 - Likely to be shared by another RN]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.AllowRetry</spirit:logicalName>
            <spirit:description>Allow Retry. Specifies that the request is being sent without a P-Credit and that the target can determine if a retry
response is given. [0 - RetryAck response not permitted, 1 - RetryAck response permitted]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.Order</spirit:logicalName>
            <spirit:description>Specifies the ordering requirements for a transaction. [0b00 - No ordering required, 0b01 - Reserved, 0b10 - Request Order/Ordered Write Observation, 0b11 - Endpoint Order, which also includes Request Order]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.PCrdType</spirit:logicalName>
            <spirit:description>Protocol Credit Type. Indicates the type of credit being granted or returned.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.MemAttr</spirit:logicalName>
            <spirit:description>Memory attribute associated with the transaction.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.SnpAttr</spirit:logicalName>
            <spirit:description>Memory attribute associated with the transaction. Values are [0b00 - Non-snoopable, 0b01 -  Snoopable].
Note: This field slot is also used in transaction flows to define DoDWT.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.PGroupID</spirit:logicalName>
            <spirit:description>Persistence Group Identifier. This field is used by a Requester to process different sets of CleanSharedPersistSep transactions by grouping them.
together and identifying each using PGroupID. Note, this field is also used in other transaction flows by LPID[4:0], StashGroupID and TagGroupID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.Excl</spirit:logicalName>
            <spirit:description>Exclusive bit. Indicates that the corresponding transaction is an Exclusive type transaction. [0 - Normal transaction, 1 - Exclusive transaction]
The Exclusive bit must only be used with the following transactions:
- ReadShared
- ReadClean
- CleanUnique
- ReadNoSnp
- WriteNoSnp

Note: This field can also be used to hold CAH and SnoopMe field data.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.ExpCompAck</spirit:logicalName>
            <spirit:description>Expect CompAck bit. Indicates that the transaction will include a CompAck response. [0 - Transaction does not include a CompAck response, 1 - Transaction includes a CompAck response]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.TagOp</spirit:logicalName>
            <spirit:description>Tags Operation. Indicates additional operations or properties on Request transactions.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.TraceTag</spirit:logicalName>
            <spirit:description>TraceTag, a one bit field.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.MPAM</spirit:logicalName>
            <spirit:description>Memory System Performance Resource Partitioning and Monitoring (MPAM) Field.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.PBHA</spirit:logicalName>
            <spirit:description>Page-based Hardware Attributes. These are obtained from page tables during address translations.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.MECID</spirit:logicalName>
            <spirit:description>Memory Encryption Contexts ID. The MECID is used by a memory encryption engine as an index into a table of encryption contexts, that contribute to the external memory encryption.
Note: This field slot can also be used to transport StreamID for an RME-DA or RME-CDA enabled interface.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.SecSID1</spirit:logicalName>
            <spirit:description>Security state. Qualifies the Security state of StreamID. Only present on an RME-DA or RME-CDA enabled interface.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLIT.RSVDC</spirit:logicalName>
            <spirit:description>Reserved for customer use. Any value is valid in a Protocol flit. Propagation of this field through the interconnect is IMPLEMENTATION DEFINED.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITRP</spirit:logicalName>
            <spirit:description>Indicates which RP the flit is being transferred on.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQSHAREDCRD</spirit:logicalName>
            <spirit:description>Indicates a shared credit is being used by the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQLCRDV</spirit:logicalName>
            <spirit:description>Link layer credit bus for TXREQ VC, with one bit per RP. A TXREQ flit may only be sent if a corresponding L-credit is available at the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>MatchPresenceAndWidth</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQLCRDSHV</spirit:logicalName>
            <spirit:description>Indicates a shared credit is being granted to the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>MatchPresenceAndWidth</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITPENDCHK</spirit:logicalName>
            <spirit:description>Check signal for RXREQFLITPEND.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQFLITPEND</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITVCHK</spirit:logicalName>
            <spirit:description>Check signal for RXREQFLITV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQFLITV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQFLITCHK</spirit:logicalName>
            <spirit:description>Check signal for RXREQFLIT.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQFLIT</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQRPCHK</spirit:logicalName>
            <spirit:description>Check signal for REQFLITRP and REQSHAREDCRD.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQFLITRP</arm:checkPortReference>
                    <arm:checkPortReference>RXREQSHAREDCRD</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQLCRDVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXREQLCRDV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQLCRDV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>MatchPresenceAndWidth</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXREQLCRDSHVCHK</spirit:logicalName>
            <spirit:description>Check signal for TXREQLCRDSHV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXREQLCRDSHV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>MatchPresenceAndWidth</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLITPEND</spirit:logicalName>
            <spirit:description>FLITPEND signal for RXDAT VC. FLITPEND is an early indication that a flit may be transmitted in the following cycle. It is intended to be used for low-level clock and/or power optimizations.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLITV</spirit:logicalName>
            <spirit:description>Flit valid signal for RXDAT VC. FLITV is the indication of a valid flit transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.QoS</spirit:logicalName>
            <spirit:description>Quality of Service priority level. Ascending values of QoS indicate higher priority levels.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.TgtID</spirit:logicalName>
            <spirit:description>Target Identifier associated with the message. The unique physical node ID of the component to which the
message is targeted. This is used by the interconnect to determine the port to which the message is routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.SrcID</spirit:logicalName>
            <spirit:description>Source Identifier associated with the message. The unique physical node ID of the component from which the
message is sent. This is used by the interconnect to determine the port from which the message has been routed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.TxnID</spirit:logicalName>
            <spirit:description>Transaction Identifier associated with the message. Every new transaction from a given source node, except a link
flit, has a unique 12-bit transaction ID.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>12</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.HomeNID</spirit:logicalName>
            <spirit:description>Home Node identifier.The Requester uses the value in this field to determine the TgtID of the CompAck to be sent in response to CompData.
        Note: This field slot can also be used to hold the MismatchedMECID and PBHA fields in bits [4:0] with remaining bits as 0.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Opcode</spirit:logicalName>
            <spirit:description>Specifies the operation to be carried out. The Opcode encodings are specific to each channel.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>4</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.RespErr</spirit:logicalName>
            <spirit:description>This field indicates the error status of the response. [0b00 - Normal Okay. Indicates that either: The Normal access was successful. The Exclusive access failed, 0b01 - Exclusive Okay. Indicates that either the read or write portion of an exclusive access was successful. 0b10 - Data Error. 0b11 - Non-data Error.]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Resp</spirit:logicalName>
            <spirit:description>Response Status. The Resp field must have the same value in all data flits of a multi-flit data transfer.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.DataSource</spirit:logicalName>
            <spirit:description>Identifies the Sender of the data response.
            Note :  This field can also be used to hold FwdState[2:0], with bits [7:3] = '00000'.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>8</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.DataPull</spirit:logicalName>
            <spirit:description>This field indicates the inclusion of a Read request, also referred to as a Data Pull, in the Snoop response to a Stash snoop</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.CBusy</spirit:logicalName>
            <spirit:description>Completer Busy Indication. This 3-bit field is a mechanism for the Completer of a transaction to indicate its current level of activity. The encoding of field is implementation defined.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>3</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.MECID</spirit:logicalName>
            <spirit:description>Memory Encryption Contexts ID. The MECID is used by a memory encryption engine as an index into a table of encryption contexts, that contribute to the external memory encryption.
     Note :  This field can also be used to hold DBID[11:0], with bits [15:12] = '0000'.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>16</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.CCID</spirit:logicalName>
            <spirit:description>Critical Chunk Identifier. The CCID indicates the critical 128-bit chunk of the data that is being requested. [0b00 - Data[127:0], 0b01 - Data[255:128], 0b10 - Data[383:256], 0b11 - Data[511:384]]</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.DataID</spirit:logicalName>
            <spirit:description>Data Identifier. The DataID indicates the relative position of the data chunk within the 512-bit cache line that is being transferred.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.CacheLineID</spirit:logicalName>
            <spirit:description>CacheLineID indicates which cache line a Response or Data message relates to.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>6</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.TagOp</spirit:logicalName>
            <spirit:description>Tags Operation. Indicates the operation to be performed on the tags present.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Tag</spirit:logicalName>
            <spirit:description>Provides a set of 4-bit Tags, per an aligned 16 bytes of data.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.TU</spirit:logicalName>
            <spirit:description>Indicates which of the Allocation Tags must be updated.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.TraceTag</spirit:logicalName>
            <spirit:description>TraceTag, a one bit field.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.CAH</spirit:logicalName>
            <spirit:description>CopyAtHome attribute. In data responses from Home or a Snoopee, indicates if the Home keeps a copy of the line that is provided to the Requester</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.NumDat</spirit:logicalName>
            <spirit:description>NumDat indicates the number of additional DAT packets represented by this transferred packet.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>2</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Replicate</spirit:logicalName>
            <spirit:description>Replicate is used in combination with NumDat to establish the field values for any elided packets.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.RSVDC</spirit:logicalName>
            <spirit:description>Reserved for customer use. Any value is valid in a Protocol flit. Propagation of this field through the interconnect is IMPLEMENTATION DEFINED.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.BE</spirit:logicalName>
            <spirit:description>Byte Enable. The BE field is defined for write data, DVM payload, and snoop response data transfers. For read response data transfers, this field can have any value. It consists of a bit for each data byte in the DAT flit.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Data</spirit:logicalName>
            <spirit:description>Data payload. The following data bus widths are supported: 128-bit, 256-bit, 512-bit.</spirit:description>
            <spirit:wire>
                <spirit:qualifier>
                    <spirit:isData>true</spirit:isData>
                </spirit:qualifier>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.DataCheck</spirit:logicalName>
            <spirit:description>Optional field of width 0 or Data width/8.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLIT.Poison</spirit:logicalName>
            <spirit:description>This field indicates if the 64-bit chunk of data corresponding to a Poison bit is poisoned, that is, has an error, and must not be consumed.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
                <spirit:defaultValue>0</spirit:defaultValue>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATLCRDV</spirit:logicalName>
            <spirit:description>Link layer credit signal for RXDAT VC. A RXDAT flit may only be sent if a corresponding L-credit is available at the transmitter.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>required</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLITPENDCHK</spirit:logicalName>
            <spirit:description>Check signal for RXDATFLITPEND.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXDATFLITPEND</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLITVCHK</spirit:logicalName>
            <spirit:description>Check signal for RXDATFLITV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXDATFLITV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATFLITCHK</spirit:logicalName>
            <spirit:description>Check signal for RXDATFLIT.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>out</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:direction>in</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXDATFLIT</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
        <spirit:port>
            <spirit:logicalName>RXDATLCRDVCHK</spirit:logicalName>
            <spirit:description>Check signal for RXDATLCRDV.</spirit:description>
            <spirit:wire>
                <spirit:onMaster>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>in</spirit:direction>
                </spirit:onMaster>
                <spirit:onSlave>
                    <spirit:presence>optional</spirit:presence>
                    <spirit:width>1</spirit:width>
                    <spirit:direction>out</spirit:direction>
                </spirit:onSlave>
            </spirit:wire>
            <spirit:vendorExtensions>
                <arm:checkPortReferences>
                    <arm:checkPortReference>RXDATLCRDV</arm:checkPortReference>
                </arm:checkPortReferences>
                <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
            </spirit:vendorExtensions>
        </spirit:port>
    </spirit:ports>
    <spirit:description>RTL pin definition for CHI-SNI_rtl interface. For more information please refer to the AMBA CHI Issue H Specification</spirit:description>
    <spirit:vendorExtensions>
        <arm:revision>3</arm:revision>
        <arm:supportedSpecifications>
            <arm:supportedSpecification>IHI0050H</arm:supportedSpecification>
        </arm:supportedSpecifications>
    </spirit:vendorExtensions>
</spirit:abstractionDefinition>