<?xml version="1.0" encoding="UTF-8"?>
<!--
//============================================================================
//   The confidential and proprietary information contained in this file may
//   only be used by a person authorised under and to the extent permitted
//   by a subsisting licensing agreement from Arm Limited or its affiliates.
//
//          (C) COPYRIGHT 2017-2023 Arm Limited or its affiliates.
//              ALL RIGHTS RESERVED
//
//   This entire notice must be reproduced on all copies of this file
//   and copies of this file may only be made by a person if such person is
//   permitted to do so under the terms of a subsisting license agreement
//   from Arm Limited or its affiliates.
//============================================================================
-->
<spirit:abstractionDefinition xmlns:arm="http://www.arm.com/SPIRIT/1685-2009" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009/index.xsd ">
  <spirit:vendor>amba.com</spirit:vendor>
  <spirit:library>AMBA5</spirit:library>
  <spirit:name>AXI5_rtl</spirit:name>
  <spirit:version>r0p0_0</spirit:version>
  <spirit:busType spirit:library="AMBA5" spirit:name="AXI5" spirit:vendor="amba.com" spirit:version="r0p0_0"/>
  <spirit:extends spirit:library="AMBA5" spirit:name="ACE5-Lite_rtl" spirit:vendor="amba.com" spirit:version="r0p0_0"/>
  <spirit:ports>
    <spirit:port>
      <spirit:logicalName>ACLK</spirit:logicalName>
      <spirit:description>Global clock signal. Synchronous signals are sampled on the rising edge of the global clock</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isClock>true</spirit:isClock>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:requiresDriver spirit:driverType="clock">true</spirit:requiresDriver>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACLKEN</spirit:logicalName>
      <spirit:description>Clock enable signal. Used as a qualifier for the ACLK signal. This signal indicates which rising edges of ACLK should be acted upon: 1 = valid rising edge of ACLK, 0 = any rising edge of ACLK should be ignored and no bus-state altered.</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:isClockEnable>true</arm:isClockEnable>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACLKENCHK</spirit:logicalName>
      <spirit:description>Check signal for ACLKEN</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:checkPortReferences>
          <arm:checkPortReference>ACLKEN</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARESETn</spirit:logicalName>
      <spirit:description>Global reset signal. This signal is active LOW</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isReset>true</spirit:isReset>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:requiresDriver spirit:driverType="singleShot">true</spirit:requiresDriver>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWVALID</spirit:logicalName>
      <spirit:description>Indicates that the write address channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write address channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWID</spirit:logicalName>
      <spirit:description>Identification tag for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWADDR</spirit:logicalName>
      <spirit:description>The address of the first transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWREGION</spirit:logicalName>
      <spirit:description>Region indicator for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLEN</spirit:logicalName>
      <spirit:description>Length, the exact number of data transfers in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>8</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>8</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSIZE</spirit:logicalName>
      <spirit:description>Size, the number of bytes in each data transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unsupported</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWBURST</spirit:logicalName>
      <spirit:description>Burst type, indicates how address changes between each transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLOCK</spirit:logicalName>
      <spirit:description>Provides information about the atomic characteristics of a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCACHE</spirit:logicalName>
      <spirit:description>Indicates how a write transaction is required to progress through a system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWPROT</spirit:logicalName>
      <spirit:description>Protection attributes of a write transaction: privilege, security level and access type</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWQOS</spirit:logicalName>
      <spirit:description>Quality of Service identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write address channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWDOMAIN</spirit:logicalName>
      <spirit:description>Indicates the shareability domain of a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSNOOP</spirit:logicalName>
      <spirit:description>Indicates the transaction type for shareable write transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWBAR</spirit:logicalName>
      <spirit:description>Indicates whether a transaction is a write barrier</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWUNIQUE</spirit:logicalName>
      <spirit:description>Indicates that the data in this transaction is permitted to be held in a Unique cache state</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHNID</spirit:logicalName>
      <spirit:description>Node Identifier of the target for a stash operation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHNIDEN</spirit:logicalName>
      <spirit:description>Indicates whether the AWSTASHNID signal is valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHLPID</spirit:logicalName>
      <spirit:description>Logical Processor Identifier within the target for a stash operation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHLPIDEN</spirit:logicalName>
      <spirit:description>Indicates whether the AWSTASHLPID signal is valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLOOP</spirit:logicalName>
      <spirit:description>Loopback value for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSECSID</spirit:logicalName>
      <spirit:description>Secure Stream Identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSID</spirit:logicalName>
      <spirit:description>Stream Identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSSID</spirit:logicalName>
      <spirit:description>Substream Identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSSIDV</spirit:logicalName>
      <spirit:description>Indicates whether the AWMMUSSID signal is valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUATST</spirit:logicalName>
      <spirit:description>Indicates whether a write transaction has undergone PCIe ATS translation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUFLOW</spirit:logicalName>
      <spirit:description>Indicates the SMMU flow for managing translation faults for this transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWNSAID</spirit:logicalName>
      <spirit:description>Non-secure Access Identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWATOP</spirit:logicalName>
      <spirit:description>Indicates the type and endianness of atomic transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>6</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>6</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMPAM</spirit:logicalName>
      <spirit:description>Write address channel MPAM information</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>11</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>11</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWIDUNQ</spirit:logicalName>
      <spirit:description>Write address channel unique ID indicator, active HIGH</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCMO</spirit:logicalName>
      <spirit:description>Write address channel CMO indicator</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWTAGOP</spirit:logicalName>
      <spirit:description>Write request tag operation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWVALID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for AWREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWREADY</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWID, AWIDUNQ</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWID</arm:checkPortReference>
          <arm:checkPortReference>AWIDUNQ</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWADDRCHK</spirit:logicalName>
      <spirit:description>Check signal for AWADDR</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWADDR</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLENCHK</spirit:logicalName>
      <spirit:description>Check signal for AWLEN</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWLEN</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCTLCHK0</spirit:logicalName>
      <spirit:description>Check signal for AWSIZE, AWBURST, AWLOCK, AWPROT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWSIZE</arm:checkPortReference>
          <arm:checkPortReference>AWBURST</arm:checkPortReference>
          <arm:checkPortReference>AWLOCK</arm:checkPortReference>
          <arm:checkPortReference>AWPROT</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCTLCHK1</spirit:logicalName>
      <spirit:description>Check signal for AWREGION, AWCACHE, AWQOS</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWREGION</arm:checkPortReference>
          <arm:checkPortReference>AWCACHE</arm:checkPortReference>
          <arm:checkPortReference>AWQOS</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCTLCHK2</spirit:logicalName>
      <spirit:description>Check signal for AWDOMAIN, AWSNOOP, AWUNIQUE, AWBAR</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCTLCHK3</spirit:logicalName>
      <spirit:description>Check signal for AWATOP, AWCMO, AWTAGOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWATOP</arm:checkPortReference>
          <arm:checkPortReference>AWCMO</arm:checkPortReference>
          <arm:checkPortReference>AWTAGOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWUSERCHK</spirit:logicalName>
      <spirit:description>Check signal for AWUSER</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWUSER</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHNIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWSTASHNID, AWSTASHNIDEN</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSTASHLPIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWSTASHLPID, AWSTASHLPIDEN</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for AWTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWTRACE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLOOPCHK</spirit:logicalName>
      <spirit:description>Check signal for AWLOOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWLOOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUCHK</spirit:logicalName>
      <spirit:description>Check signal for AWMMUATST, AWMMUFLOW, AWMMUSECSID, AWMMUSSIDV</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWMMUATST</arm:checkPortReference>
          <arm:checkPortReference>AWMMUFLOW</arm:checkPortReference>
          <arm:checkPortReference>AWMMUSECSID</arm:checkPortReference>
          <arm:checkPortReference>AWMMUSSIDV</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWMMUSID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWMMUSID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMMUSSIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWMMUSSID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWMMUSSID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWNSAIDCHK</spirit:logicalName>
      <spirit:description>Check signal for AWNSAID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWNSAID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWMPAMCHK</spirit:logicalName>
      <spirit:description>Check signal for AWMPAM</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWMPAM</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WVALID</spirit:logicalName>
      <spirit:description>Indicates that the write data channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write data channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WDATA</spirit:logicalName>
      <spirit:description>Write data</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isData>true</spirit:isData>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WSTRB</spirit:logicalName>
      <spirit:description>Write strobes, indicate which byte lanes hold valid data</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WTAG</spirit:logicalName>
      <spirit:description>The tag associated with write data</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WTAGUPDATE</spirit:logicalName>
      <spirit:description>Indicates which tags must be written to memory in the case of an Update operation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WLAST</spirit:logicalName>
      <spirit:description>Indicates whether this is the last data transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write data channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WPOISON</spirit:logicalName>
      <spirit:description>Indicates that the write data in this transfer has been corrupted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for WVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WVALID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for WREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WREADY</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WDATACHK</spirit:logicalName>
      <spirit:description>Check signal for WDATA</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WDATA</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WSTRBCHK</spirit:logicalName>
      <spirit:description>Check signal for WSTRB</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WSTRB</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WTAGCHK</spirit:logicalName>
      <spirit:description>Check signal for WTAG, WTAGUPDATE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WTAG</arm:checkPortReference>
          <arm:checkPortReference>WTAGUPDATE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WLASTCHK</spirit:logicalName>
      <spirit:description>Check signal for WLAST</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WLAST</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WUSERCHK</spirit:logicalName>
      <spirit:description>Check signal for WUSER</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WUSER</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WPOISONCHK</spirit:logicalName>
      <spirit:description>Check signal for WPOISON</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WPOISON</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for WTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>WTRACE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BVALID</spirit:logicalName>
      <spirit:description>Indicates that the write response channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write response channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BID</spirit:logicalName>
      <spirit:description>Identification tag for a write response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BIDUNQ</spirit:logicalName>
      <spirit:description>Write response channel unique ID indicator, active HIGH</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BRESP</spirit:logicalName>
      <spirit:description>Write response, indicates the status of a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BCOMP</spirit:logicalName>
      <spirit:description>Response flag which indicates that a write is observable</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BPERSIST</spirit:logicalName>
      <spirit:description>Response flag which indicates that write data is updated in persistent memory</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BTAGMATCH</spirit:logicalName>
      <spirit:description>Indicates the result of a tag comparison on a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write response channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BLOOP</spirit:logicalName>
      <spirit:description>Loopback value for a write response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for BVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BVALID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for BREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BREADY</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BIDCHK</spirit:logicalName>
      <spirit:description>Check signal for BID, BIDUNQ</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BID</arm:checkPortReference>
          <arm:checkPortReference>BIDUNQ</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BRESPCHK</spirit:logicalName>
      <spirit:description>Check signal for BRESP, BCOMP, BPERSIST, BTAGMATCH</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BRESP</arm:checkPortReference>
          <arm:checkPortReference>BCOMP</arm:checkPortReference>
          <arm:checkPortReference>BPERSIST</arm:checkPortReference>
          <arm:checkPortReference>BTAGMATCH</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BUSERCHK</spirit:logicalName>
      <spirit:description>Check signal for BUSER</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BUSER</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for BTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BTRACE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BLOOPCHK</spirit:logicalName>
      <spirit:description>Check signal for BLOOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Write_response</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>BLOOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARVALID</spirit:logicalName>
      <spirit:description>Indicates that the read address channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the read address channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARID</spirit:logicalName>
      <spirit:description>Identification tag for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARADDR</spirit:logicalName>
      <spirit:description>The address of the first transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARREGION</spirit:logicalName>
      <spirit:description>Region indicator for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLEN</spirit:logicalName>
      <spirit:description>Length, the exact number of data transfers in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>8</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>8</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARSIZE</spirit:logicalName>
      <spirit:description>Size, the number of bytes in each data transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unsupported</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARBURST</spirit:logicalName>
      <spirit:description>Burst type, indicates how address changes between each transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLOCK</spirit:logicalName>
      <spirit:description>Provides information about the atomic characteristics of a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCACHE</spirit:logicalName>
      <spirit:description>Indicates how a read transaction is required to progress through a system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARPROT</spirit:logicalName>
      <spirit:description>Protection attributes of a read transaction: privilege, security level and access type</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARQOS</spirit:logicalName>
      <spirit:description>Quality of Service identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the read address channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARSNOOP</spirit:logicalName>
      <spirit:description>Indicates the transaction type for shareable read transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARBAR</spirit:logicalName>
      <spirit:description>Indicates whether a transaction is a read barrier</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARDOMAIN</spirit:logicalName>
      <spirit:description>Indicates the shareability domain of a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARVMIDEXT</spirit:logicalName>
      <spirit:description>VMID extension for a read address</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLOOP</spirit:logicalName>
      <spirit:description>Loopback value for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSECSID</spirit:logicalName>
      <spirit:description>Secure Stream Identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSID</spirit:logicalName>
      <spirit:description>Stream Identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSSID</spirit:logicalName>
      <spirit:description>Substream Identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSSIDV</spirit:logicalName>
      <spirit:description>Indicates whether the ARMMUSSID signal is valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUATST</spirit:logicalName>
      <spirit:description>Indicates whether a read transaction has undergone PCIe ATS translation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUFLOW</spirit:logicalName>
      <spirit:description>Indicates the SMMU flow for managing translation faults for this transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARNSAID</spirit:logicalName>
      <spirit:description>Non-secure Access Identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMPAM</spirit:logicalName>
      <spirit:description>Read address channel MPAM information</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>11</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>11</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCHUNKEN</spirit:logicalName>
      <spirit:description>Read data chunking enable</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARTAGOP</spirit:logicalName>
      <spirit:description>Read request tag operation</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARIDUNQ</spirit:logicalName>
      <spirit:description>Read address channel unique ID indicator, active HIGH</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ARVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARVALID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for ARREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARREADY</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ARID, ARIDUNQ</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARID</arm:checkPortReference>
          <arm:checkPortReference>ARIDUNQ</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARADDRCHK</spirit:logicalName>
      <spirit:description>Check signal for ARADDR</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARADDR</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLENCHK</spirit:logicalName>
      <spirit:description>Check signal for ARLEN</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARLEN</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCTLCHK0</spirit:logicalName>
      <spirit:description>Check signal for ARSIZE, ARBURST, ARLOCK, ARPROT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARSIZE</arm:checkPortReference>
          <arm:checkPortReference>ARBURST</arm:checkPortReference>
          <arm:checkPortReference>ARLOCK</arm:checkPortReference>
          <arm:checkPortReference>ARPROT</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCTLCHK1</spirit:logicalName>
      <spirit:description>Check signal for ARREGION, ARCACHE, ARQOS</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARREGION</arm:checkPortReference>
          <arm:checkPortReference>ARCACHE</arm:checkPortReference>
          <arm:checkPortReference>ARQOS</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCTLCHK2</spirit:logicalName>
      <spirit:description>Check signal for ARDOMAIN, ARSNOOP, ARBAR</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCTLCHK3</spirit:logicalName>
      <spirit:description>Check signal for ARVMIDEXT, ARCHUNKEN, ARTAGOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARVMIDEXT</arm:checkPortReference>
          <arm:checkPortReference>ARCHUNKEN</arm:checkPortReference>
          <arm:checkPortReference>ARTAGOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARUSERCHK</spirit:logicalName>
      <spirit:description>Check signal for ARUSER</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARUSER</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for ARTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARTRACE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLOOPCHK</spirit:logicalName>
      <spirit:description>Check signal for ARLOOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARLOOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUCHK</spirit:logicalName>
      <spirit:description>Check signal for ARMMUATST, ARMMUFLOW, ARMMUSECSID, ARMMUSSIDV</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARMMUATST</arm:checkPortReference>
          <arm:checkPortReference>ARMMUFLOW</arm:checkPortReference>
          <arm:checkPortReference>ARMMUSECSID</arm:checkPortReference>
          <arm:checkPortReference>ARMMUSSIDV</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ARMMUSID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARMMUSID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMMUSSIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ARMMUSSID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARMMUSSID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARNSAIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ARNSAID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARNSAID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARMPAMCHK</spirit:logicalName>
      <spirit:description>Check signal for ARMPAM</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_address</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>ARMPAM</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RVALID</spirit:logicalName>
      <spirit:description>Indicates that the read data channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the read data channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RID</spirit:logicalName>
      <spirit:description>Identification tag for read data and response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RIDUNQ</spirit:logicalName>
      <spirit:description>Read data channel unique ID indicator, active HIGH</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RDATA</spirit:logicalName>
      <spirit:description>Read data</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isData>true</spirit:isData>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RTAG</spirit:logicalName>
      <spirit:description>The tag associated with read data</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RRESP</spirit:logicalName>
      <spirit:description>Read response, indicates the status of a read transfer</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RLAST</spirit:logicalName>
      <spirit:description>Indicates whether this is the last data transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the read data channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RPOISON</spirit:logicalName>
      <spirit:description>Indicates that the read data in this transfer has been corrupted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RLOOP</spirit:logicalName>
      <spirit:description>Loopback value for a read response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RCHUNKV</spirit:logicalName>
      <spirit:description>Valid signal of RCHUNKNUM and RCHUNKSTRB</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RCHUNKNUM</spirit:logicalName>
      <spirit:description>Read data chunk number</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RCHUNKSTRB</spirit:logicalName>
      <spirit:description>Read data chunk strobe</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for RVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RVALID</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for RREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RREADY</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RIDCHK</spirit:logicalName>
      <spirit:description>Check signal for RID, RIDUNQ</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RID</arm:checkPortReference>
          <arm:checkPortReference>RIDUNQ</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RDATACHK</spirit:logicalName>
      <spirit:description>Check signal for RDATA</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RDATA</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RTAGCHK</spirit:logicalName>
      <spirit:description>Check signal for RTAG</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RTAG</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RRESPCHK</spirit:logicalName>
      <spirit:description>Check signal for RRESP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RRESP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RLASTCHK</spirit:logicalName>
      <spirit:description>Check signal for RLAST</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RLAST</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RCHUNKCHK</spirit:logicalName>
      <spirit:description>Check signal for RCHUNKV, RCHUNKNUM, RCHUNKSTRB</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RCHUNKV</arm:checkPortReference>
          <arm:checkPortReference>RCHUNKNUM</arm:checkPortReference>
          <arm:checkPortReference>RCHUNKSTRB</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RUSERCHK</spirit:logicalName>
      <spirit:description>Check signal for RUSER</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RUSER</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RPOISONCHK</spirit:logicalName>
      <spirit:description>Check signal for RPOISON</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RPOISON</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for RTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RTRACE</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RLOOPCHK</spirit:logicalName>
      <spirit:description>Check signal for RLOOP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:channelRef>Read_data</arm:channelRef>
        <arm:checkPortReferences>
          <arm:checkPortReference>RLOOP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACVALID</spirit:logicalName>
      <spirit:description>Indicates that the snoop address channel signals are valid </spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the snoop address channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACADDR</spirit:logicalName>
      <spirit:description>The address of the first transfer in a snoop transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACSNOOP</spirit:logicalName>
      <spirit:description>Snoop transaction type</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACPROT</spirit:logicalName>
      <spirit:description>Protection attributes of a snoop transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACVMIDEXT</spirit:logicalName>
      <spirit:description>VMID extension for a snoop address</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for ACVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for ACREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACADDRCHK</spirit:logicalName>
      <spirit:description>Check signal for ACADDR</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACCTLCHK</spirit:logicalName>
      <spirit:description>Check signal for ACSNOOP, ACPROT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACVMIDEXTCHK</spirit:logicalName>
      <spirit:description>Check signal for ACVMIDEXT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for ACTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRVALID</spirit:logicalName>
      <spirit:description>Indicates that the snoop response channel signals are valid </spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the snoop response channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRRESP</spirit:logicalName>
      <spirit:description>Read response, indicates the status of a snoop transfer</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRNSAID</spirit:logicalName>
      <spirit:description>Non-secure Access Identifier for a snoop response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for CRVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for CRREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRRESPCHK</spirit:logicalName>
      <spirit:description>Check signal for CRRESP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for CRTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CRNSAIDCHK</spirit:logicalName>
      <spirit:description>Check signal for CRNSAID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDVALID</spirit:logicalName>
      <spirit:description>Indicates that the snoop data channel signals are valid </spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the snoop data channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDDATA</spirit:logicalName>
      <spirit:description>Snoop data</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isData>true</spirit:isData>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDLAST</spirit:logicalName>
      <spirit:description>Indicates whether this is the last data transfer in a snoop transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDPOISON</spirit:logicalName>
      <spirit:description>Indicates that the snoop data in this transfer has been corrupted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDTRACE</spirit:logicalName>
      <spirit:description>Supports the tracing of specific transactions through the system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDVALIDCHK</spirit:logicalName>
      <spirit:description>Check signal for CDVALID</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDREADYCHK</spirit:logicalName>
      <spirit:description>Check signal for CDREADY</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDDATACHK</spirit:logicalName>
      <spirit:description>Check signal for CDDATA</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDLASTCHK</spirit:logicalName>
      <spirit:description>Check signal for CDLAST</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDPOISONCHK</spirit:logicalName>
      <spirit:description>Check signal for CDPOISON</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>CDTRACECHK</spirit:logicalName>
      <spirit:description>Check signal for CDTRACE</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RACK</spirit:logicalName>
      <spirit:description>Read acknowledge signal</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WACK</spirit:logicalName>
      <spirit:description>Write acknowledge signal</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RACKCHK</spirit:logicalName>
      <spirit:description>Check signal for RACK</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WACKCHK</spirit:logicalName>
      <spirit:description>Check signal for WACK</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>VAWQOSACCEPT</spirit:logicalName>
      <spirit:description>QoS acceptance level for write transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>VARQOSACCEPT</spirit:logicalName>
      <spirit:description>QoS acceptance level for read transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>4</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>VAWQOSACCEPTCHK</spirit:logicalName>
      <spirit:description>Check signal for VAWQOSACCEPT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:checkPortReferences>
          <arm:checkPortReference>VAWQOSACCEPT</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>VARQOSACCEPTCHK</spirit:logicalName>
      <spirit:description>Check signal for VARQOSACCEPT</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:checkPortReferences>
          <arm:checkPortReference>VARQOSACCEPT</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWAKEUP</spirit:logicalName>
      <spirit:description>Indicates that activity is initiated on the write or read address channels</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACWAKEUP</spirit:logicalName>
      <spirit:description>Indicates that activity is initiated on the snoop address channels</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>SYSCOREQ</spirit:logicalName>
      <spirit:description>Coherency connect request</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>SYSCOACK</spirit:logicalName>
      <spirit:description>Coherency connect acknowledge</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWAKEUPCHK</spirit:logicalName>
      <spirit:description>Check signal for AWAKEUP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
        <arm:checkPortReferences>
          <arm:checkPortReference>AWAKEUP</arm:checkPortReference>
        </arm:checkPortReferences>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACWAKEUPCHK</spirit:logicalName>
      <spirit:description>Check signal for ACWAKEUP</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>SYSCOREQCHK</spirit:logicalName>
      <spirit:description>Check signal for SYSCOREQ</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>SYSCOACKCHK</spirit:logicalName>
      <spirit:description>Check signal for SYSCOACK</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BROADCASTATOMIC</spirit:logicalName>
      <spirit:description>Tie-off input to control whether a Manager issues atomic transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BROADCASTINNER</spirit:logicalName>
      <spirit:description>Tie-off input to control whether a Manager issues inner shareable transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BROADCASTOUTER</spirit:logicalName>
      <spirit:description>Tie-off input to control whether a Manager issues outer shareable transactions</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BROADCASTCACHEMAINT</spirit:logicalName>
      <spirit:description>Tie-off input to control whether a Manager issues cache maintenance operations</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
  </spirit:ports>
  <spirit:description>This is an RTL Abstraction of the AMBA5/AXI5 BusDefinition. For more information please refer to AMBA AXI and ACE Protocol Specification ARM IHI 0022H http://www.arm.com/support/AMBA.html</spirit:description>
  <spirit:vendorExtensions>
    <arm:revision>7</arm:revision>
    <arm:supportedSpecifications>
      <arm:supportedSpecification>IHI0022H</arm:supportedSpecification>
    </arm:supportedSpecifications>
    <arm:channels>
      <arm:channel>
        <arm:name>Read_address</arm:name>
        <arm:label>AR</arm:label>
        <arm:description>The Read address channel carries all the required address and control information for a read transaction.</arm:description>
      </arm:channel>
      <arm:channel>
        <arm:name>Write_address</arm:name>
        <arm:label>AW</arm:label>
        <arm:description>The Write address channel carries all the required address and control information for a write  transaction.</arm:description>
      </arm:channel>
      <arm:channel>
        <arm:name>Read_data</arm:name>
        <arm:label>R</arm:label>
        <arm:description>The read data channel carries both the read data and the read response information from the Subordinate to the Manager </arm:description>
      </arm:channel>
      <arm:channel>
        <arm:name>Write_data</arm:name>
        <arm:label>W</arm:label>
        <arm:description>The write data channel carries the write data from the Manager to the Subordinate </arm:description>
      </arm:channel>
      <arm:channel>
        <arm:name>Write_response</arm:name>
        <arm:label>B</arm:label>
        <arm:description>A Subordinate uses the write response channel to respond to write transactions</arm:description>
      </arm:channel>
    </arm:channels>
  </spirit:vendorExtensions>
</spirit:abstractionDefinition>
