<?xml version="1.0" encoding="UTF-8"?>
<!--
//============================================================================
//   The confidential and proprietary information contained in this file may
//   only be used by a person authorised under and to the extent permitted
//   by a subsisting licensing agreement from Arm Limited or its affiliates.
//
//          (C) COPYRIGHT 2017-2023 Arm Limited or its affiliates.
//              ALL RIGHTS RESERVED
//
//   This entire notice must be reproduced on all copies of this file
//   and copies of this file may only be made by a person if such person is
//   permitted to do so under the terms of a subsisting license agreement
//   from Arm Limited or its affiliates.
//============================================================================
-->
<spirit:abstractionDefinition xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:arm="http://www.arm.com/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009/index.xsd ">
  <spirit:vendor>amba.com</spirit:vendor>
  <spirit:library>AMBA4</spirit:library>
  <spirit:name>AXI4-Lite_rtl</spirit:name>
  <spirit:version>r0p0_0</spirit:version>
  <spirit:busType spirit:vendor="amba.com" spirit:library="AMBA4" spirit:name="AXI4-Lite" spirit:version="r0p0_0"/>
  <spirit:extends spirit:vendor="amba.com" spirit:library="AMBA4" spirit:name="AXI4_rtl" spirit:version="r0p0_0"/>
  <spirit:ports>
    <spirit:port>
      <spirit:logicalName>ACLK</spirit:logicalName>
      <spirit:description>Global clock signal. Synchronous signals are sampled on the rising edge of the global clock</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isClock>true</spirit:isClock>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:requiresDriver spirit:driverType="clock">true</spirit:requiresDriver>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ACLKEN</spirit:logicalName>
      <spirit:description>Clock enable signal. Used as a qualifier for the ACLK signal. This signal indicates which rising edges of ACLK should be acted upon: 1 = valid rising edge of ACLK, 0 = any rising edge of ACLK should be ignored and no bus-state altered.</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>1</spirit:defaultValue>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:isClockEnable>true</arm:isClockEnable>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARESETn</spirit:logicalName>
      <spirit:description>Global reset signal. This signal is active LOW</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isReset>true</spirit:isReset>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:requiresDriver spirit:driverType="singleShot">true</spirit:requiresDriver>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWID</spirit:logicalName>
      <spirit:description>Identification tag for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWADDR</spirit:logicalName>
      <spirit:description>The address of the first transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLEN</spirit:logicalName>
      <spirit:description>Length, the exact number of data transfers in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWSIZE</spirit:logicalName>
      <spirit:description>Size, the number of bytes in each data transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWBURST</spirit:logicalName>
      <spirit:description>Burst type, indicates how address changes between each transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWLOCK</spirit:logicalName>
      <spirit:description>Provides information about the atomic characteristics of a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWCACHE</spirit:logicalName>
      <spirit:description>Indicates how a write transaction is required to progress through a system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWPROT</spirit:logicalName>
      <spirit:description>Protection attributes of a write transaction: privilege, security level and access type</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWQOS</spirit:logicalName>
      <spirit:description>Quality of Service identifier for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWREGION</spirit:logicalName>
      <spirit:description>Region indicator for a write transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write address channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWVALID</spirit:logicalName>
      <spirit:description>Indicates that the write address channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>AWREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write address channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WDATA</spirit:logicalName>
      <spirit:description>Write data</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isData>true</spirit:isData>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WSTRB</spirit:logicalName>
      <spirit:description>Write strobes, indicate which byte lanes hold valid data</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0xFF</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WLAST</spirit:logicalName>
      <spirit:description>Indicates whether this is the last data transfer in a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write data channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WVALID</spirit:logicalName>
      <spirit:description>Indicates that the write data channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>WREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write data channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BID</spirit:logicalName>
      <spirit:description>Identification tag for a write response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BRESP</spirit:logicalName>
      <spirit:description>Write response, indicates the status of a write transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the write response channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BVALID</spirit:logicalName>
      <spirit:description>Indicates that the write response channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>BREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the write response channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARID</spirit:logicalName>
      <spirit:description>Identification tag for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARADDR</spirit:logicalName>
      <spirit:description>The address of the first transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLEN</spirit:logicalName>
      <spirit:description>Length, the exact number of data transfers in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARSIZE</spirit:logicalName>
      <spirit:description>Size, the number of bytes in each data transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARBURST</spirit:logicalName>
      <spirit:description>Burst type, indicates how address changes between each transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARLOCK</spirit:logicalName>
      <spirit:description>Provides information about the atomic characteristics of a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARCACHE</spirit:logicalName>
      <spirit:description>Indicates how a read transaction is required to progress through a system</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARPROT</spirit:logicalName>
      <spirit:description>Protection attributes of a read transaction: privilege, security level and access type</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>3</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARQOS</spirit:logicalName>
      <spirit:description>Quality of Service identifier for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARREGION</spirit:logicalName>
      <spirit:description>Region indicator for a read transaction</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isAddress>true</spirit:isAddress>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the read address channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARVALID</spirit:logicalName>
      <spirit:description>Indicates that the read address channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>ARREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the read address channel can be accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RID</spirit:logicalName>
      <spirit:description>Identification tag for read data and response</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RDATA</spirit:logicalName>
      <spirit:description>Read data</spirit:description>
      <spirit:wire>
        <spirit:qualifier>
          <spirit:isData>true</spirit:isData>
        </spirit:qualifier>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
      <spirit:vendorExtensions>
        <arm:defaultNotDefined>Unknown</arm:defaultNotDefined>
      </spirit:vendorExtensions>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RRESP</spirit:logicalName>
      <spirit:description>Read response, indicates the status of the read transfer</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:width>2</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RLAST</spirit:logicalName>
      <spirit:description>Indicates whether this is the last data transfer in a read transaction</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>illegal</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RUSER</spirit:logicalName>
      <spirit:description>User-defined extension for the read data channel</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>optional</spirit:presence>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
        <spirit:defaultValue>0</spirit:defaultValue>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RVALID</spirit:logicalName>
      <spirit:description>Indicates that the read data channel signals are valid</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
    <spirit:port>
      <spirit:logicalName>RREADY</spirit:logicalName>
      <spirit:description>Indicates that a transfer on the read data channel can accepted</spirit:description>
      <spirit:wire>
        <spirit:onMaster>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>out</spirit:direction>
        </spirit:onMaster>
        <spirit:onSlave>
          <spirit:presence>required</spirit:presence>
          <spirit:width>1</spirit:width>
          <spirit:direction>in</spirit:direction>
        </spirit:onSlave>
      </spirit:wire>
    </spirit:port>
  </spirit:ports>
  <spirit:description>This is an RTL Abstraction of the AMBA4/AXI4-Lite BusDefinition. For more information please refer to AMBA AXI and ACE Protocol Specification ARM IHI 0022G http://www.arm.com/support/AMBA.html</spirit:description>
  <spirit:vendorExtensions>
    <arm:revision>3</arm:revision>
    <arm:supportedSpecifications>
      <arm:supportedSpecification>IHI0022G</arm:supportedSpecification>
    </arm:supportedSpecifications>
  </spirit:vendorExtensions>
</spirit:abstractionDefinition>
